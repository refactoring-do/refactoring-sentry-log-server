version: '3.8'

services:
  sentry_redis:
    image: redis:${REDIS_VERSION}
    container_name: sentry_redis
    hostname: sentry_redis
    volumes:
      - ${REDIS_VOLUME_DIR}/data:/data
    restart: always
  
  sentry_postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: sentry_postgres
    hostname: sentry_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ${POSTGRES_VOLUME_DIR}/data:/var/lib/postgresql/data
    restart: always

  sentry_web:
    image: sentry:${SENTRY_VERSION}
    container_name: sentry_web
    hostname: sentry_web
    ports:
      - ${SENTRY_PORT}:9000
    environment:
      - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY}
      - SENTRY_POSTGRES_HOST=${POSTGRES_HOST}
      - SENTRY_POSTGRES_PORT=${POSTGRES_PORT}
      - SENTRY_DB_NAME=${POSTGRES_DB}
      - SENTRY_DB_USER=${POSTGRES_USER}
      - SENTRY_DB_PASSWORD=${POSTGRES_PASSWORD}
      - SENTRY_REDIS_HOST=${REDIS_HOST}
      - SENTRY_REDIS_PORT=${REDIS_PORT}
      - SENTRY_ALLOW_REGISTRATION=${SENTRY_ALLOW_REGISTRATION}
      - SENTRY_EMAIL_HOST=${SENTRY_EMAIL_HOST}
      - SENTRY_EMAIL_PASSWORD=${SENTRY_EMAIL_PASSWORD}
      - SENTRY_EMAIL_USER=${SENTRY_EMAIL_USER}
      - SENTRY_EMAIL_PORT=${SENTRY_EMAIL_PORT}
      - SENTRY_EMAIL_USE_TLS=${SENTRY_EMAIL_USE_TLS}
      - SENTRY_SERVER_EMAIL=${SENTRY_SERVER_EMAIL}
    depends_on:
      - sentry_redis
      - sentry_postgres
    volumes:
      - ${SENTRY_VOLUME_DIR}/web:/var/lib/sentry/files
    restart: always

  sentry_cron:
    image: sentry:${SENTRY_VERSION}
    container_name: sentry_cron
    hostname: sentry_cron
    environment:
      - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY}
      - SENTRY_POSTGRES_HOST=${POSTGRES_HOST}
      - SENTRY_POSTGRES_PORT=${POSTGRES_PORT}
      - SENTRY_DB_NAME=${POSTGRES_DB}
      - SENTRY_DB_USER=${POSTGRES_USER}
      - SENTRY_DB_PASSWORD=${POSTGRES_PASSWORD}
      - SENTRY_REDIS_HOST=${REDIS_HOST}
      - SENTRY_REDIS_PORT=${REDIS_PORT}
      - SENTRY_ALLOW_REGISTRATION=${SENTRY_ALLOW_REGISTRATION}
      - SENTRY_EMAIL_HOST=${SENTRY_EMAIL_HOST}
      - SENTRY_EMAIL_PASSWORD=${SENTRY_EMAIL_PASSWORD}
      - SENTRY_EMAIL_USER=${SENTRY_EMAIL_USER}
      - SENTRY_EMAIL_PORT=${SENTRY_EMAIL_PORT}
      - SENTRY_EMAIL_USE_TLS=${SENTRY_EMAIL_USE_TLS}
      - SENTRY_SERVER_EMAIL=${SENTRY_SERVER_EMAIL}
    depends_on:
      - sentry_redis
      - sentry_postgres
    command: "sentry run cron"
    volumes:
      - ${SENTRY_VOLUME_DIR}/web:/var/lib/sentry/files
    restart: always

  sentry_worker:
    image: sentry:${SENTRY_VERSION}
    container_name: sentry_worker
    hostname: sentry_worker
    environment:
      - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY}
      - SENTRY_POSTGRES_HOST=${POSTGRES_HOST}
      - SENTRY_POSTGRES_PORT=${POSTGRES_PORT}
      - SENTRY_DB_NAME=${POSTGRES_DB}
      - SENTRY_DB_USER=${POSTGRES_USER}
      - SENTRY_DB_PASSWORD=${POSTGRES_PASSWORD}
      - SENTRY_REDIS_HOST=${REDIS_HOST}
      - SENTRY_REDIS_PORT=${REDIS_PORT}
      - SENTRY_ALLOW_REGISTRATION=${SENTRY_ALLOW_REGISTRATION}
      - SENTRY_EMAIL_HOST=${SENTRY_EMAIL_HOST}
      - SENTRY_EMAIL_PASSWORD=${SENTRY_EMAIL_PASSWORD}
      - SENTRY_EMAIL_USER=${SENTRY_EMAIL_USER}
      - SENTRY_EMAIL_PORT=${SENTRY_EMAIL_PORT}
      - SENTRY_EMAIL_USE_TLS=${SENTRY_EMAIL_USE_TLS}
      - SENTRY_SERVER_EMAIL=${SENTRY_SERVER_EMAIL}
    depends_on:
      - sentry_redis
      - sentry_postgres
    command: "sentry run worker"
    volumes:
      - ${SENTRY_VOLUME_DIR}/web:/var/lib/sentry/files
    restart: always
